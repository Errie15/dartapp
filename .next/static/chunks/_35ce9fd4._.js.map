{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/store/gameStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Player, Game, Score, ScoreType } from '@/types';\n\ninterface GameState {\n  players: Player[];\n  games: Game[];\n  currentGame: Game | null;\n  \n  // Player actions\n  addPlayer: (name: string) => Player;\n  removePlayer: (id: string) => void;\n  getPlayer: (id: string) => Player | undefined;\n  \n  // Game actions\n  createGame: (playerIds: string[], startingScore: number) => Game;\n  endGame: (id: string) => void;\n  getCurrentGame: () => Game | null;\n  \n  // Score actions\n  addScore: (playerId: string, value: number, type: ScoreType) => void;\n  getPlayerScores: (playerId: string, gameId?: string) => Score[];\n  getLatestRound: (playerId: string, gameId: string) => number;\n  getPlayerRemainingScore: (playerId: string, gameId?: string) => number;\n  \n  // Stats\n  getPlayerAverageScore: (playerId: string, gameId?: string) => number;\n  \n  // Check for valid dart throw (not bust)\n  checkValidThrow: (playerId: string, value: number, type: ScoreType, gameId?: string) => { valid: boolean, message?: string };\n}\n\nconst useGameStore = create<GameState>()(\n  persist(\n    (set, get) => ({\n      players: [],\n      games: [],\n      currentGame: null,\n      \n      // Player actions\n      addPlayer: (name: string) => {\n        const newPlayer: Player = {\n          id: Date.now().toString(),\n          name,\n          createdAt: Date.now(),\n        };\n        \n        set((state) => ({\n          players: [...state.players, newPlayer],\n        }));\n        \n        return newPlayer;\n      },\n      \n      removePlayer: (id: string) => {\n        set((state) => ({\n          players: state.players.filter((player) => player.id !== id),\n        }));\n      },\n      \n      getPlayer: (id: string) => {\n        return get().players.find((player) => player.id === id);\n      },\n      \n      // Game actions\n      createGame: (playerIds: string[], startingScore: number) => {\n        const newGame: Game = {\n          id: Date.now().toString(),\n          playerIds,\n          scores: [],\n          createdAt: Date.now(),\n          startingScore,\n        };\n        \n        set((state) => ({\n          games: [...state.games, newGame],\n          currentGame: newGame,\n        }));\n        \n        return newGame;\n      },\n      \n      endGame: (id: string) => {\n        set((state) => {\n          const updatedGames = state.games.map((game) => {\n            if (game.id === id) {\n              return { ...game, endedAt: Date.now() };\n            }\n            return game;\n          });\n          \n          return {\n            games: updatedGames,\n            currentGame: state.currentGame?.id === id ? null : state.currentGame,\n          };\n        });\n      },\n      \n      getCurrentGame: () => {\n        return get().currentGame;\n      },\n      \n      // Kontrollera om ett kast är giltigt enligt dartreglerna\n      checkValidThrow: (playerId: string, value: number, type: ScoreType, gameId?: string) => {\n        const { games, currentGame } = get();\n        const targetGameId = gameId || currentGame?.id;\n        \n        if (!targetGameId) return { valid: false, message: \"Inget aktivt spel\" };\n        \n        const game = games.find((g) => g.id === targetGameId);\n        if (!game) return { valid: false, message: \"Spelet hittades inte\" };\n        \n        // Beräkna nuvarande poäng\n        const currentScore = get().getPlayerRemainingScore(playerId, targetGameId);\n        \n        // Beräkna värdet av kastet\n        let throwValue = value;\n        if (type === 'double') throwValue *= 2;\n        if (type === 'triple') throwValue *= 3;\n        \n        // Beräkna den nya poängen efter kastet\n        const newScore = currentScore - throwValue;\n        \n        // Kontrollera om kastet leder till \"bust\" (poäng under 0 eller exakt 1)\n        if (newScore < 0) {\n          return { valid: false, message: \"Bust! Poängen blev under 0.\" };\n        }\n        \n        if (newScore === 1) {\n          return { valid: false, message: \"Bust! Poängen blev exakt 1.\" };\n        }\n        \n        // Kontrollera om det är en giltig checkout (om poängen blir 0)\n        if (newScore === 0 && type !== 'double' && type !== 'innerBull') {\n          return { valid: false, message: \"Ogiltigt! Checkout måste ske på en dubbel.\" };\n        }\n        \n        return { valid: true };\n      },\n      \n      // Score actions\n      addScore: (playerId: string, value: number, type: ScoreType) => {\n        const { currentGame } = get();\n        \n        if (!currentGame) {\n          console.error('No active game');\n          return;\n        }\n        \n        // Kontrollera om kastet är giltigt enligt dartreglerna\n        const validity = get().checkValidThrow(playerId, value, type, currentGame.id);\n        \n        if (!validity.valid) {\n          console.warn('Ogiltigt kast:', validity.message);\n          return;\n        }\n        \n        const latestRound = get().getLatestRound(playerId, currentGame.id);\n        const newRound = latestRound + 1;\n        \n        const newScore: Score = {\n          id: Date.now().toString(),\n          value,\n          type,\n          playerId,\n          timestamp: Date.now(),\n          gameId: currentGame.id,\n          round: newRound,\n        };\n        \n        set((state) => {\n          const updatedGame = {\n            ...currentGame,\n            scores: [...currentGame.scores, newScore],\n          };\n          \n          const updatedGames = state.games.map((game) => {\n            if (game.id === currentGame.id) {\n              return updatedGame;\n            }\n            return game;\n          });\n          \n          return {\n            games: updatedGames,\n            currentGame: updatedGame,\n          };\n        });\n      },\n      \n      getPlayerScores: (playerId: string, gameId?: string) => {\n        const { games, currentGame } = get();\n        const targetGameId = gameId || currentGame?.id;\n        \n        if (!targetGameId) return [];\n        \n        const game = games.find((g) => g.id === targetGameId);\n        if (!game) return [];\n        \n        return game.scores.filter((score) => score.playerId === playerId);\n      },\n      \n      getLatestRound: (playerId: string, gameId: string) => {\n        const playerScores = get().getPlayerScores(playerId, gameId);\n        \n        if (playerScores.length === 0) return 0;\n        \n        const rounds = playerScores.map((score) => score.round);\n        return Math.max(...rounds);\n      },\n      \n      getPlayerRemainingScore: (playerId: string, gameId?: string) => {\n        const { games, currentGame } = get();\n        const targetGameId = gameId || currentGame?.id;\n        \n        if (!targetGameId) return 0;\n        \n        const game = games.find((g) => g.id === targetGameId);\n        if (!game) return 0;\n        \n        const startingScore = game.startingScore;\n        const playerScores = game.scores.filter((score) => score.playerId === playerId);\n        \n        const scoreSum = playerScores.reduce((sum, score) => {\n          let value = score.value;\n          \n          if (score.type === 'double') {\n            value *= 2;\n          } else if (score.type === 'triple') {\n            value *= 3;\n          }\n          \n          return sum + value;\n        }, 0);\n        \n        return startingScore - scoreSum;\n      },\n      \n      getPlayerAverageScore: (playerId: string, gameId?: string) => {\n        const scores = get().getPlayerScores(playerId, gameId);\n        \n        if (scores.length === 0) return 0;\n        \n        const totalScore = scores.reduce((sum, score) => {\n          let value = score.value;\n          \n          if (score.type === 'double') {\n            value *= 2;\n          } else if (score.type === 'triple') {\n            value *= 3;\n          }\n          \n          return sum + value;\n        }, 0);\n        \n        return Math.round(totalScore / scores.length);\n      },\n    }),\n    {\n      name: 'dart-game-storage',\n    }\n  )\n);\n\nexport default useGameStore; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/components/DartboardCompactInput.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ScoreType } from \"@/types\";\r\n\r\ninterface DartboardCompactInputProps {\r\n  onNumberClick: (number: number) => void;\r\n  onBullClick: (isBullseye: boolean) => void;\r\n  onMissClick: () => void;\r\n  onScoreSubmit: () => void;\r\n  scoreType: ScoreType;\r\n  setScoreType: (type: ScoreType) => void;\r\n  throwCount: number;\r\n  disabled: boolean;\r\n}\r\n\r\nexport default function DartboardCompactInput({\r\n  onNumberClick,\r\n  onBullClick,\r\n  onMissClick,\r\n  onScoreSubmit,\r\n  scoreType,\r\n  setScoreType,\r\n  throwCount,\r\n  disabled\r\n}: DartboardCompactInputProps) {\r\n  // Reorganized to 5 rows of 4 columns for symmetry\r\n  const dartboardNumbersGrid = [\r\n    [1, 2, 3, 4],\r\n    [5, 6, 7, 8],\r\n    [9, 10, 11, 12],\r\n    [13, 14, 15, 16],\r\n    [17, 18, 19, 20]\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-black p-2 rounded-lg\">\r\n        {/* Score Type Selector */}\r\n        <div className=\"mb-1.5\">\r\n          <div className=\"flex justify-between bg-gray-800 rounded-lg p-0.5\">\r\n            {([\"single\", \"double\", \"triple\"] as ScoreType[]).map((type) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => setScoreType(type)}\r\n                className={`flex-1 py-0.5 px-1 rounded text-center text-xs mx-0.5 ${\r\n                  scoreType === type\r\n                    ? \"bg-red-600 text-white\"\r\n                    : \"bg-gray-700 text-gray-300\"\r\n                }`}\r\n              >\r\n                {type === \"single\" ? \"E\" : type === \"double\" ? \"D\" : \"T\"}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Special Buttons */}\r\n        <div className=\"flex justify-between gap-1 mb-1.5\">\r\n          <button\r\n            onClick={() => onBullClick(true)}\r\n            disabled={disabled}\r\n            className=\"flex-1 py-0.5 rounded bg-yellow-600 text-white font-medium text-xs\"\r\n          >\r\n            BULL\r\n          </button>\r\n          <button\r\n            onClick={() => onBullClick(false)}\r\n            disabled={disabled}\r\n            className=\"flex-1 py-0.5 rounded bg-green-600 text-white font-medium text-xs mx-1\"\r\n          >\r\n            25\r\n          </button>\r\n          <button\r\n            onClick={onMissClick}\r\n            disabled={disabled}\r\n            className=\"flex-1 py-0.5 rounded bg-red-600 text-white font-medium text-xs\"\r\n          >\r\n            MISS\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Numbers Grid - Symmetrical layout */}\r\n        <div className=\"mb-1.5\">\r\n          {dartboardNumbersGrid.map((row, rowIndex) => (\r\n            <div key={rowIndex} className=\"flex justify-between gap-1 mb-1\">\r\n              {row.map(number => (\r\n                <button\r\n                  key={number}\r\n                  onClick={() => onNumberClick(number)}\r\n                  disabled={disabled}\r\n                  className=\"flex-1 py-0.5 px-0 rounded bg-gray-700 text-white font-medium text-xs mx-0.5\"\r\n                >\r\n                  {number}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Submit Button */}\r\n        <button\r\n          onClick={onScoreSubmit}\r\n          disabled={(disabled && throwCount < 3) || throwCount === 0}\r\n          className={`w-full py-1 rounded-sm ${\r\n            (disabled && throwCount < 3) || throwCount === 0\r\n              ? \"bg-gray-600 text-gray-400\"\r\n              : \"bg-red-600 text-white\"\r\n          } font-medium text-xs`}\r\n        >\r\n          REGISTRERA ({throwCount}/3)\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;;AAee,SAAS,sBAAsB,EAC5C,aAAa,EACb,WAAW,EACX,WAAW,EACX,aAAa,EACb,SAAS,EACT,YAAY,EACZ,UAAU,EACV,QAAQ,EACmB;IAC3B,kDAAkD;IAClD,MAAM,uBAAuB;QAC3B;YAAC;YAAG;YAAG;YAAG;SAAE;QACZ;YAAC;YAAG;YAAG;YAAG;SAAE;QACZ;YAAC;YAAG;YAAI;YAAI;SAAG;QACf;YAAC;YAAI;YAAI;YAAI;SAAG;QAChB;YAAC;YAAI;YAAI;YAAI;SAAG;KACjB;IAED,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACZ,AAAC;4BAAC;4BAAU;4BAAU;yBAAS,CAAiB,GAAG,CAAC,CAAC,qBACpD,6LAAC;gCAEC,SAAS,IAAM,aAAa;gCAC5B,WAAW,CAAC,sDAAsD,EAChE,cAAc,OACV,0BACA,6BACJ;0CAED,SAAS,WAAW,MAAM,SAAS,WAAW,MAAM;+BARhD;;;;;;;;;;;;;;;8BAeb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS,IAAM,YAAY;4BAC3B,UAAU;4BACV,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS,IAAM,YAAY;4BAC3B,UAAU;4BACV,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;4BACT,UAAU;4BACV,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC;oBAAI,WAAU;8BACZ,qBAAqB,GAAG,CAAC,CAAC,KAAK,yBAC9B,6LAAC;4BAAmB,WAAU;sCAC3B,IAAI,GAAG,CAAC,CAAA,uBACP,6LAAC;oCAEC,SAAS,IAAM,cAAc;oCAC7B,UAAU;oCACV,WAAU;8CAET;mCALI;;;;;2BAHD;;;;;;;;;;8BAgBd,6LAAC;oBACC,SAAS;oBACT,UAAU,AAAC,YAAY,aAAa,KAAM,eAAe;oBACzD,WAAW,CAAC,uBAAuB,EACjC,AAAC,YAAY,aAAa,KAAM,eAAe,IAC3C,8BACA,wBACL,oBAAoB,CAAC;;wBACvB;wBACc;wBAAW;;;;;;;;;;;;;;;;;;AAKlC;KAnGwB","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/utils/checkoutCalculator.ts"],"sourcesContent":["// Definiera typer för ett kast och en checkout-väg\r\nexport interface Throw {\r\n  segment: string;\r\n  value: number;\r\n}\r\n\r\nexport interface CheckoutPath {\r\n  throws: Throw[];\r\n  totalThrows: number;\r\n}\r\n\r\n// Alla möjliga dubbelsegment (1-20 och bullseye)\r\nconst doubles: Throw[] = [\r\n  ...Array.from({ length: 20 }, (_, i) => ({ segment: `D${i + 1}`, value: (i + 1) * 2 })),\r\n  { segment: 'DB', value: 50 } // Dubbel bullseye\r\n];\r\n\r\n// Alla möjliga trippelsegment (1-20)\r\nconst triples: Throw[] = Array.from(\r\n  { length: 20 },\r\n  (_, i) => ({ segment: `T${i + 1}`, value: (i + 1) * 3 })\r\n);\r\n\r\n// Alla möjliga enkla segment (1-20 och bullseye)\r\nconst singles: Throw[] = [\r\n  ...Array.from({ length: 20 }, (_, i) => ({ segment: `S${i + 1}`, value: i + 1 })),\r\n  { segment: 'SB', value: 25 } // Enkel bullseye (outer bull)\r\n];\r\n\r\n// Alla möjliga segment förutom dubbla\r\nconst allSegmentsExceptDoubles: Throw[] = [...singles, ...triples];\r\n\r\n/**\r\n * Beräknar möjliga checkout-vägar för en given poäng\r\n * @param remainingScore Kvarvarande poäng\r\n * @returns Array med möjliga checkout-vägar, sorterade efter antal kast\r\n */\r\nexport function calculateCheckout(remainingScore: number): CheckoutPath[] {\r\n  // Specialfall: Om poängen är 0, finns det ingen checkout\r\n  if (remainingScore <= 0) {\r\n    return [];\r\n  }\r\n\r\n  // Specialfall: Om poängen är 1, är det omöjligt att checka ut (bust-regel)\r\n  if (remainingScore === 1) {\r\n    return [{ throws: [{ segment: 'D1', value: 2 }], totalThrows: 1 }];\r\n  }\r\n\r\n  // Specialfall: Om poängen är 2, enda möjligheten är D1\r\n  if (remainingScore === 2) {\r\n    return [{ throws: [{ segment: 'D1', value: 2 }], totalThrows: 1 }];\r\n  }\r\n\r\n  const checkoutPaths: CheckoutPath[] = [];\r\n\r\n  // En-pils checkout: kolla om poängen kan checkas ut med en dubbel\r\n  const oneThrowDouble = doubles.find(d => d.value === remainingScore);\r\n  if (oneThrowDouble) {\r\n    checkoutPaths.push({\r\n      throws: [oneThrowDouble],\r\n      totalThrows: 1\r\n    });\r\n  }\r\n\r\n  // Två-pilar checkout: kolla alla kombinationer av ett segment följt av en dubbel\r\n  for (const firstThrow of allSegmentsExceptDoubles) {\r\n    const scoreAfterFirstThrow = remainingScore - firstThrow.value;\r\n    \r\n    // Om poängen blir 1 eller under 0, blir det \"bust\"\r\n    if (scoreAfterFirstThrow <= 1) {\r\n      continue;\r\n    }\r\n    \r\n    // Hitta dubbel för att checka ut\r\n    const finishingDouble = doubles.find(d => d.value === scoreAfterFirstThrow);\r\n    if (finishingDouble) {\r\n      checkoutPaths.push({\r\n        throws: [firstThrow, finishingDouble],\r\n        totalThrows: 2\r\n      });\r\n    }\r\n  }\r\n\r\n  // Tre-pilar checkout: kolla alla kombinationer av två segment följda av en dubbel\r\n  // Vi prioriterar att hitta kombinationer där de första två kasten ger höga poäng\r\n  // för att maximera chansen att komma till en enkel dubbel i sista kastet\r\n  for (const firstThrow of allSegmentsExceptDoubles) {\r\n    for (const secondThrow of allSegmentsExceptDoubles) {\r\n      const scoreAfterTwoThrows = remainingScore - firstThrow.value - secondThrow.value;\r\n      \r\n      // Om poängen blir 1 eller under 0, blir det \"bust\"\r\n      if (scoreAfterTwoThrows <= 1) {\r\n        continue;\r\n      }\r\n      \r\n      // Hitta dubbel för att checka ut\r\n      const finishingDouble = doubles.find(d => d.value === scoreAfterTwoThrows);\r\n      if (finishingDouble) {\r\n        checkoutPaths.push({\r\n          throws: [firstThrow, secondThrow, finishingDouble],\r\n          totalThrows: 3\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Sortera checkout-vägar: först efter antal kast (minst antal först),\r\n  // sedan efter komplexitet (föredra vägar med högre värden på första kasten)\r\n  return checkoutPaths\r\n    .sort((a, b) => {\r\n      // Först sortera efter antal kast\r\n      if (a.totalThrows !== b.totalThrows) {\r\n        return a.totalThrows - b.totalThrows;\r\n      }\r\n      \r\n      // Vid samma antal kast, prioritera vägar med högst första kast\r\n      // eftersom dessa ger större chans att nå en enkel dubbel\r\n      const aFirstValue = a.throws[0].value;\r\n      const bFirstValue = b.throws[0].value;\r\n      return bFirstValue - aFirstValue;\r\n    })\r\n    .slice(0, 5); // Begränsa till de 5 bästa vägarna\r\n}\r\n\r\n/**\r\n * Hämtar de rekommenderade checkout-vägarna för en given poäng\r\n * @param remainingScore Kvarvarande poäng\r\n * @returns Array med de bästa checkout-vägarna, eller tom array om ingen checkout är möjlig\r\n */\r\nexport function getRecommendedCheckouts(remainingScore: number): CheckoutPath[] {\r\n  // Hämta alla möjliga checkout-vägar\r\n  const allPaths = calculateCheckout(remainingScore);\r\n  \r\n  // Om det finns vägar med 1 kast, returnera endast dessa\r\n  const oneThrowPaths = allPaths.filter(path => path.totalThrows === 1);\r\n  if (oneThrowPaths.length > 0) {\r\n    return oneThrowPaths.slice(0, 3);\r\n  }\r\n  \r\n  // Om det finns vägar med 2 kast, returnera endast dessa\r\n  const twoThrowPaths = allPaths.filter(path => path.totalThrows === 2);\r\n  if (twoThrowPaths.length > 0) {\r\n    return twoThrowPaths.slice(0, 3);\r\n  }\r\n  \r\n  // Annars returnera de bästa 3 vägarna (troligen 3-kast vägar)\r\n  return allPaths.slice(0, 3);\r\n}\r\n\r\n/**\r\n * Formaterar en checkout-väg till en läsbar sträng\r\n * @param path Checkout-väg\r\n * @returns Formaterad sträng\r\n */\r\nexport function formatCheckoutPath(path: CheckoutPath): string {\r\n  return path.throws.map(t => t.segment).join(', ');\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/components/CheckoutSuggestion.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getRecommendedCheckouts, CheckoutPath, formatCheckoutPath } from \"@/utils/checkoutCalculator\";\r\n\r\ninterface CheckoutSuggestionProps {\r\n  remainingScore: number;\r\n  isActive: boolean;\r\n}\r\n\r\nexport default function CheckoutSuggestion({ \r\n  remainingScore, \r\n  isActive \r\n}: CheckoutSuggestionProps) {\r\n  const [checkoutPaths, setCheckoutPaths] = useState<CheckoutPath[]>([]);\r\n  \r\n  useEffect(() => {\r\n    // Beräkna checkout-vägar endast om komponenten är aktiv\r\n    if (isActive && remainingScore > 0) {\r\n      const paths = getRecommendedCheckouts(remainingScore);\r\n      setCheckoutPaths(paths);\r\n    } else {\r\n      setCheckoutPaths([]);\r\n    }\r\n  }, [remainingScore, isActive]);\r\n  \r\n  // Om det inte finns några checkout-vägar eller scoren är 0, visa inget\r\n  if (checkoutPaths.length === 0 || remainingScore === 0) {\r\n    if (remainingScore === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Om vi har 1 poäng kvar, visa specialmeddelande\r\n    if (remainingScore === 1) {\r\n      return (\r\n        <div className=\"mt-3 bg-yellow-50 border border-yellow-200 rounded-md p-2\">\r\n          <div className=\"text-sm text-yellow-800 font-medium mb-1\">\r\n            Ingen checkout möjlig\r\n          </div>\r\n          <p className=\"text-xs text-yellow-700\">\r\n            Med 1 poäng kvar går det inte att checka ut eftersom senaste pilen måste landa i en dubbel.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"mt-3 bg-gray-50 border border-gray-200 rounded-md p-2\">\r\n        <div className=\"text-sm text-gray-800 font-medium mb-1\">\r\n          Ingen rekommenderad checkout\r\n        </div>\r\n        <p className=\"text-xs text-gray-700\">\r\n          Kunde inte hitta en checkout-väg för {remainingScore} poäng med max 3 pilar.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"mt-3 bg-green-50 border border-green-200 rounded-md p-2\">\r\n      <div className=\"text-sm text-green-800 font-medium mb-1\">\r\n        Checkout-förslag ({checkoutPaths[0].totalThrows} pilar)\r\n      </div>\r\n      \r\n      <ul className=\"space-y-1.5\">\r\n        {checkoutPaths.map((path, index) => (\r\n          <li key={index} className=\"flex items-center\">\r\n            <span className=\"inline-block w-5 h-5 rounded-full bg-green-600 text-white text-xs flex items-center justify-center mr-2\">\r\n              {index + 1}\r\n            </span>\r\n            <span className=\"text-sm text-green-800 font-medium\">\r\n              {formatCheckoutPath(path)}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      {/* Information om dubblar */}\r\n      <div className=\"mt-2 text-xs text-green-700\">\r\n        <p>Kom ihåg: Det sista kastet måste vara en dubbel.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAUe,SAAS,mBAAmB,EACzC,cAAc,EACd,QAAQ,EACgB;;IACxB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAErE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,wDAAwD;YACxD,IAAI,YAAY,iBAAiB,GAAG;gBAClC,MAAM,QAAQ,CAAA,GAAA,qIAAA,CAAA,0BAAuB,AAAD,EAAE;gBACtC,iBAAiB;YACnB,OAAO;gBACL,iBAAiB,EAAE;YACrB;QACF;uCAAG;QAAC;QAAgB;KAAS;IAE7B,uEAAuE;IACvE,IAAI,cAAc,MAAM,KAAK,KAAK,mBAAmB,GAAG;QACtD,IAAI,mBAAmB,GAAG;YACxB,OAAO;QACT;QAEA,iDAAiD;QACjD,IAAI,mBAAmB,GAAG;YACxB,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAA2C;;;;;;kCAG1D,6LAAC;wBAAE,WAAU;kCAA0B;;;;;;;;;;;;QAK7C;QAEA,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BAAyC;;;;;;8BAGxD,6LAAC;oBAAE,WAAU;;wBAAwB;wBACG;wBAAe;;;;;;;;;;;;;IAI7D;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;oBAA0C;oBACpC,aAAa,CAAC,EAAE,CAAC,WAAW;oBAAC;;;;;;;0BAGlD,6LAAC;gBAAG,WAAU;0BACX,cAAc,GAAG,CAAC,CAAC,MAAM,sBACxB,6LAAC;wBAAe,WAAU;;0CACxB,6LAAC;gCAAK,WAAU;0CACb,QAAQ;;;;;;0CAEX,6LAAC;gCAAK,WAAU;0CACb,CAAA,GAAA,qIAAA,CAAA,qBAAkB,AAAD,EAAE;;;;;;;uBALf;;;;;;;;;;0BAYb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX;GAzEwB;KAAA","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/app/game/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter, useParams } from \"next/navigation\";\nimport useGameStore from \"@/store/gameStore\";\nimport { ScoreType } from \"@/types\";\nimport DartboardCompactInput from \"@/components/DartboardCompactInput\";\nimport CheckoutSuggestion from \"@/components/CheckoutSuggestion\";\n\nexport default function GamePage() {\n  const router = useRouter();\n  const params = useParams();\n  const id = params?.id as string;\n  const [activePlayerId, setActivePlayerId] = useState<string | null>(null);\n  const [scoreType, setScoreType] = useState<ScoreType>(\"single\");\n  const [throws, setThrows] = useState<Array<{ value: number, type: ScoreType }>>([]);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  \n  const { \n    games, \n    addScore, \n    endGame, \n    getPlayer, \n    getPlayerRemainingScore, \n    getPlayerAverageScore,\n    checkValidThrow\n  } = useGameStore();\n  \n  // Find the game from the store\n  const game = games.find(g => g.id === id);\n  \n  useEffect(() => {\n    // If game doesn't exist, redirect to game page\n    if (!game) {\n      router.push(\"/game\");\n      return;\n    }\n    \n    // Set active player if not already set\n    if (!activePlayerId && game.playerIds && game.playerIds.length > 0) {\n      setActivePlayerId(game.playerIds[0]);\n    }\n  }, [game, activePlayerId, router]);\n\n  // Rensa felmeddelandet när spelaren ändras\n  useEffect(() => {\n    setErrorMessage(null);\n  }, [activePlayerId]);\n  \n  // Early return if game is not found\n  if (!game) {\n    return <div className=\"p-8 text-center\">Laddar spel...</div>;\n  }\n  \n  const handleNumberClick = (number: number) => {\n    if (!activePlayerId || throws.length >= 3) return;\n    \n    // Validera kast innan det läggs till i vyn\n    const throwValue = number;\n    const throwType = scoreType;\n    const validity = checkValidThrow(activePlayerId, throwValue, throwType, id);\n\n    // Om kastet skulle leda till \"bust\", visa en varning men låt användaren lägga till det ändå\n    // (så att vi kan visa en tydligare varning när de försöker registrera hela rundan)\n    if (!validity.valid) {\n      setErrorMessage(validity.message || \"Ogiltigt kast\");\n    } else {\n      // Rensa tidigare felmeddelanden\n      setErrorMessage(null);\n    }\n    \n    const newThrow = { value: number, type: scoreType };\n    setThrows([...throws, newThrow]);\n  };\n  \n  const handleBullClick = (isBullseye: boolean) => {\n    if (!activePlayerId || throws.length >= 3) return;\n    \n    const type: ScoreType = isBullseye ? \"innerBull\" : \"outerBull\";\n    const value = isBullseye ? 50 : 25;\n    \n    // Validera kast innan det läggs till i vyn\n    const validity = checkValidThrow(activePlayerId, value, type, id);\n    \n    // Om kastet skulle leda till \"bust\", visa en varning men låt användaren lägga till det ändå\n    if (!validity.valid) {\n      setErrorMessage(validity.message || \"Ogiltigt kast\");\n    } else {\n      // Rensa tidigare felmeddelanden\n      setErrorMessage(null);\n    }\n    \n    const newThrow = { value, type };\n    setThrows([...throws, newThrow]);\n  };\n  \n  const handleMissClick = () => {\n    if (!activePlayerId || throws.length >= 3) return;\n    \n    // Rensa felmeddelande vid miss (eftersom det inte kan leda till bust)\n    setErrorMessage(null);\n    \n    const newThrow = { value: 0, type: \"single\" as ScoreType };\n    setThrows([...throws, newThrow]);\n  };\n  \n  const handleRemoveThrow = (index: number) => {\n    const newThrows = [...throws];\n    newThrows.splice(index, 1);\n    setThrows(newThrows);\n    \n    // Rensa felmeddelande när ett kast tas bort\n    setErrorMessage(null);\n  };\n  \n  const handleScoreSubmit = () => {\n    if (!activePlayerId || throws.length === 0 || !game) return;\n    \n    // Kontrollera om någon av kasten skulle leda till bust för att förhindra registrering\n    let isBust = false;\n    let bustMessage = \"\";\n    \n    // Ackumulera poäng genom att stega igenom alla kast och simulera effekten\n    // Använd checkValidThrow för varje steg i simuleringen\n    let simulatedRemainingScore = getPlayerRemainingScore(activePlayerId, id);\n    \n    for (const throwItem of throws) {\n      // Simulera kastet och kontrollera validitet\n      const validity = checkValidThrow(activePlayerId, throwItem.value, throwItem.type, id);\n      \n      if (!validity.valid) {\n        isBust = true;\n        bustMessage = validity.message || \"Ogiltigt kast\";\n        break;\n      }\n      \n      // Uppdatera kvarvarande poäng för nästa kast-validering\n      let throwValue = throwItem.value;\n      if (throwItem.type === 'double') throwValue *= 2;\n      if (throwItem.type === 'triple') throwValue *= 3;\n      simulatedRemainingScore -= throwValue;\n      \n      // Om den simulerade poängen är 0 eller negativ, avbryt (detta är extra kontroll)\n      if (simulatedRemainingScore <= 0 && simulatedRemainingScore !== 0) {\n        // Om simulerad poäng inte är exakt 0, markera som bust\n        // Denna kod bör inte nås om checkValidThrow fungerar korrekt\n        if (simulatedRemainingScore !== 0) {\n          isBust = true;\n          bustMessage = \"Poängen skulle bli under 0 eller exakt 1.\";\n          break;\n        }\n      }\n    }\n    \n    if (isBust) {\n      // Visa felmeddelande och tillåt inte registrering\n      setErrorMessage(bustMessage);\n      return;\n    }\n    \n    // Om ingen bust, registrera alla kast\n    throws.forEach(throwItem => {\n      addScore(activePlayerId, throwItem.value, throwItem.type);\n    });\n    \n    // Beräkna kvarvarande poäng efter alla kast\n    const playerRemainingScore = getPlayerRemainingScore(activePlayerId, id);\n    \n    // Kontrollera om spelaren har vunnit (poäng === 0)\n    if (playerRemainingScore === 0) {\n      endGame(id);\n      router.push(`/game/${id}/summary`);\n      return;\n    }\n    \n    // Byt spelare\n    if (game.playerIds && game.playerIds.length > 0) {\n      const currentPlayerIndex = game.playerIds.indexOf(activePlayerId);\n      const nextPlayerIndex = (currentPlayerIndex + 1) % game.playerIds.length;\n      setActivePlayerId(game.playerIds[nextPlayerIndex]);\n    }\n    \n    // Återställ val\n    setScoreType(\"single\");\n    setThrows([]);\n    setErrorMessage(null);\n  };\n  \n  const calculateScoreValue = (type: ScoreType, value: number) => {\n    if (type === \"double\") return value * 2;\n    if (type === \"triple\") return value * 3;\n    return value;\n  };\n  \n  const renderThrowLabel = (throwItem: { value: number, type: ScoreType }) => {\n    if (throwItem.value === 0) return \"Miss\";\n    if (throwItem.type === \"innerBull\") return \"Bullseye\";\n    if (throwItem.type === \"outerBull\") return \"Outer Bull\";\n    return `${throwItem.type === \"single\" ? \"Enkel\" : throwItem.type === \"double\" ? \"Dubbel\" : \"Trippel\"} ${throwItem.value}`;\n  };\n  \n  // Safeguard against null or undefined playerIds\n  const playerIds = game.playerIds || [];\n\n  return (\n    <div className=\"max-w-5xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Pågående spel</h1>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Player Scores */}\n        <div className=\"lg:col-span-1 bg-white rounded-lg shadow-md overflow-hidden\">\n          <h2 className=\"text-xl font-semibold p-4 bg-gray-100\">Spelare</h2>\n          \n          <ul className=\"divide-y divide-gray-200\">\n            {playerIds.map((playerId) => {\n              const player = getPlayer(playerId);\n              const remainingScore = getPlayerRemainingScore(playerId, id);\n              const avgScore = getPlayerAverageScore(playerId, id);\n              const isActive = activePlayerId === playerId;\n              \n              return (\n                <li \n                  key={playerId} \n                  className={`p-4 ${isActive ? \"bg-blue-50\" : \"\"}`}\n                >\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"font-medium\">{player?.name}</div>\n                    <div className=\"text-2xl font-bold\">{remainingScore}</div>\n                  </div>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    Snitt: {avgScore > 0 ? avgScore : \"-\"}\n                  </div>\n                  \n                  {isActive && (\n                    <>\n                      <div className=\"mt-2 p-2 bg-blue-100 rounded-md text-sm text-blue-800 mb-2\">\n                        Aktuell spelare\n                      </div>\n                      \n                      {/* Current Throws (in player box) */}\n                      <div className=\"mt-3\">\n                        {throws.length === 0 ? (\n                          <div className=\"text-sm text-gray-500\">\n                            Inga kast ännu ({throws.length}/3)\n                          </div>\n                        ) : (\n                          <div className=\"bg-white border border-blue-200 rounded-md p-2\">\n                            <div className=\"text-sm text-blue-800 mb-1 font-medium\">\n                              Aktuella kast ({throws.length}/3):\n                            </div>\n                            <ul className=\"space-y-1\">\n                              {throws.map((throwItem, index) => (\n                                <li key={index} className=\"flex justify-between items-center text-sm\">\n                                  <span>{renderThrowLabel(throwItem)}</span>\n                                  <div className=\"flex items-center\">\n                                    <span className=\"font-bold mr-2\">\n                                      {calculateScoreValue(throwItem.type, throwItem.value)}\n                                    </span>\n                                    <button \n                                      onClick={() => handleRemoveThrow(index)}\n                                      className=\"text-red-500 hover:text-red-700 p-1 text-xs\"\n                                    >\n                                      ×\n                                    </button>\n                                  </div>\n                                </li>\n                              ))}\n                            </ul>\n                            \n                            {/* Error message for bust */}\n                            {errorMessage && (\n                              <div className=\"mt-2 p-1.5 bg-red-50 border border-red-200 rounded text-xs text-red-700\">\n                                {errorMessage}\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Checkout Suggestion */}\n                      <CheckoutSuggestion \n                        remainingScore={remainingScore} \n                        isActive={isActive} \n                      />\n                    </>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        \n        {/* Dartboard Input */}\n        <div className=\"lg:col-span-2\">\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-6\">\n            <h2 className=\"text-xl font-semibold p-4 bg-gray-100\">\n              {activePlayerId ? `${getPlayer(activePlayerId)?.name}s tur (${throws.length}/3)` : \"Välj en spelare\"}\n            </h2>\n            \n            <div className=\"p-4\">\n              <DartboardCompactInput \n                onNumberClick={handleNumberClick}\n                onBullClick={handleBullClick}\n                onMissClick={handleMissClick}\n                onScoreSubmit={handleScoreSubmit}\n                scoreType={scoreType}\n                setScoreType={setScoreType}\n                throwCount={throws.length}\n                disabled={!activePlayerId || throws.length >= 3}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/node_modules/zustand/esm/vanilla.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI;IACJ,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,MAAM,WAAW,CAAC,SAAS;QACzB,MAAM,YAAY,OAAO,YAAY,aAAa,QAAQ,SAAS;QACnE,IAAI,CAAC,OAAO,EAAE,CAAC,WAAW,QAAQ;YAChC,MAAM,gBAAgB;YACtB,QAAQ,CAAC,WAAW,OAAO,UAAU,OAAO,cAAc,YAAY,cAAc,IAAI,IAAI,YAAY,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;YACjI,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS,OAAO;QAClD;IACF;IACA,MAAM,WAAW,IAAM;IACvB,MAAM,kBAAkB,IAAM;IAC9B,MAAM,YAAY,CAAC;QACjB,UAAU,GAAG,CAAC;QACd,OAAO,IAAM,UAAU,MAAM,CAAC;IAChC;IACA,MAAM,MAAM;QAAE;QAAU;QAAU;QAAiB;IAAU;IAC7D,MAAM,eAAe,QAAQ,YAAY,UAAU,UAAU;IAC7D,OAAO;AACT;AACA,MAAM,cAAc,CAAC,cAAgB,cAAc,gBAAgB,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/node_modules/zustand/esm/react.mjs"],"sourcesContent":["import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAC,MAAQ;AAC1B,SAAS,SAAS,GAAG,EAAE,WAAW,QAAQ;IACxC,MAAM,QAAQ,6JAAA,CAAA,UAAK,CAAC,oBAAoB,CACtC,IAAI,SAAS;gDACb,IAAM,SAAS,IAAI,QAAQ;;gDAC3B,IAAM,SAAS,IAAI,eAAe;;IAEpC,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;IACpB,OAAO;AACT;AACA,MAAM,aAAa,CAAC;IAClB,MAAM,MAAM,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE;IACxB,MAAM,gBAAgB,CAAC,WAAa,SAAS,KAAK;IAClD,OAAO,MAAM,CAAC,eAAe;IAC7B,OAAO;AACT;AACA,MAAM,SAAS,CAAC,cAAgB,cAAc,WAAW,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1301, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/node_modules/zustand/esm/middleware.mjs"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === undefined) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === undefined ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === undefined) {\n      connection == null ? undefined : connection.send(action, get());\n      return r;\n    }\n    connection == null ? undefined : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? undefined : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? undefined : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : undefined) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === undefined) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === undefined || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === undefined) {\n              return connection == null ? undefined : connection.init(api.getState());\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === undefined) {\n              connection == null ? undefined : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                connection == null ? undefined : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? undefined : _a.state;\n            if (!lastComputedState) return;\n            if (store === undefined) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? undefined : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== undefined) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? undefined : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? undefined : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? undefined : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? undefined : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? undefined : _b.call(options, (_a = get()) != null ? _a : configResult)) || undefined;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, undefined];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(stateFromStorage, undefined);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(undefined, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? undefined : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}