{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/store/gameStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Player, Game, Score, ScoreType } from '@/types';\n\ninterface GameState {\n  players: Player[];\n  games: Game[];\n  currentGame: Game | null;\n  \n  // Player actions\n  addPlayer: (name: string) => Player;\n  removePlayer: (id: string) => void;\n  getPlayer: (id: string) => Player | undefined;\n  \n  // Game actions\n  createGame: (playerIds: string[], startingScore: number) => Game;\n  endGame: (id: string) => void;\n  getCurrentGame: () => Game | null;\n  \n  // Score actions\n  addScore: (playerId: string, value: number, type: ScoreType) => void;\n  getPlayerScores: (playerId: string, gameId?: string) => Score[];\n  getLatestRound: (playerId: string, gameId: string) => number;\n  getPlayerRemainingScore: (playerId: string, gameId?: string) => number;\n  \n  // Stats\n  getPlayerAverageScore: (playerId: string, gameId?: string) => number;\n}\n\nconst useGameStore = create<GameState>()(\n  persist(\n    (set, get) => ({\n      players: [],\n      games: [],\n      currentGame: null,\n      \n      // Player actions\n      addPlayer: (name: string) => {\n        const newPlayer: Player = {\n          id: Date.now().toString(),\n          name,\n          createdAt: Date.now(),\n        };\n        \n        set((state) => ({\n          players: [...state.players, newPlayer],\n        }));\n        \n        return newPlayer;\n      },\n      \n      removePlayer: (id: string) => {\n        set((state) => ({\n          players: state.players.filter((player) => player.id !== id),\n        }));\n      },\n      \n      getPlayer: (id: string) => {\n        return get().players.find((player) => player.id === id);\n      },\n      \n      // Game actions\n      createGame: (playerIds: string[], startingScore: number) => {\n        const newGame: Game = {\n          id: Date.now().toString(),\n          playerIds,\n          scores: [],\n          createdAt: Date.now(),\n          startingScore,\n        };\n        \n        set((state) => ({\n          games: [...state.games, newGame],\n          currentGame: newGame,\n        }));\n        \n        return newGame;\n      },\n      \n      endGame: (id: string) => {\n        set((state) => {\n          const updatedGames = state.games.map((game) => {\n            if (game.id === id) {\n              return { ...game, endedAt: Date.now() };\n            }\n            return game;\n          });\n          \n          return {\n            games: updatedGames,\n            currentGame: state.currentGame?.id === id ? null : state.currentGame,\n          };\n        });\n      },\n      \n      getCurrentGame: () => {\n        return get().currentGame;\n      },\n      \n      // Score actions\n      addScore: (playerId: string, value: number, type: ScoreType) => {\n        const { currentGame } = get();\n        \n        if (!currentGame) {\n          console.error('No active game');\n          return;\n        }\n        \n        const latestRound = get().getLatestRound(playerId, currentGame.id);\n        const newRound = latestRound + 1;\n        \n        const newScore: Score = {\n          id: Date.now().toString(),\n          value,\n          type,\n          playerId,\n          timestamp: Date.now(),\n          gameId: currentGame.id,\n          round: newRound,\n        };\n        \n        set((state) => {\n          const updatedGame = {\n            ...currentGame,\n            scores: [...currentGame.scores, newScore],\n          };\n          \n          const updatedGames = state.games.map((game) => {\n            if (game.id === currentGame.id) {\n              return updatedGame;\n            }\n            return game;\n          });\n          \n          return {\n            games: updatedGames,\n            currentGame: updatedGame,\n          };\n        });\n      },\n      \n      getPlayerScores: (playerId: string, gameId?: string) => {\n        const { games, currentGame } = get();\n        const targetGameId = gameId || currentGame?.id;\n        \n        if (!targetGameId) return [];\n        \n        const game = games.find((g) => g.id === targetGameId);\n        if (!game) return [];\n        \n        return game.scores.filter((score) => score.playerId === playerId);\n      },\n      \n      getLatestRound: (playerId: string, gameId: string) => {\n        const playerScores = get().getPlayerScores(playerId, gameId);\n        \n        if (playerScores.length === 0) return 0;\n        \n        const rounds = playerScores.map((score) => score.round);\n        return Math.max(...rounds);\n      },\n      \n      getPlayerRemainingScore: (playerId: string, gameId?: string) => {\n        const { games, currentGame } = get();\n        const targetGameId = gameId || currentGame?.id;\n        \n        if (!targetGameId) return 0;\n        \n        const game = games.find((g) => g.id === targetGameId);\n        if (!game) return 0;\n        \n        const startingScore = game.startingScore;\n        const playerScores = game.scores.filter((score) => score.playerId === playerId);\n        \n        const scoreSum = playerScores.reduce((sum, score) => {\n          let value = score.value;\n          \n          if (score.type === 'double') {\n            value *= 2;\n          } else if (score.type === 'triple') {\n            value *= 3;\n          }\n          \n          return sum + value;\n        }, 0);\n        \n        return startingScore - scoreSum;\n      },\n      \n      getPlayerAverageScore: (playerId: string, gameId?: string) => {\n        const scores = get().getPlayerScores(playerId, gameId);\n        \n        if (scores.length === 0) return 0;\n        \n        const totalScore = scores.reduce((sum, score) => {\n          let value = score.value;\n          \n          if (score.type === 'double') {\n            value *= 2;\n          } else if (score.type === 'triple') {\n            value *= 3;\n          }\n          \n          return sum + value;\n        }, 0);\n        \n        return Math.round(totalScore / scores.length);\n      },\n    }),\n    {\n      name: 'dart-game-storage',\n    }\n  )\n);\n\nexport default useGameStore; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/erikh/OneDrive/Desktop/dartapp/src/app/players/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { FaUserPlus, FaTrash, FaEdit } from \"react-icons/fa\";\nimport useGameStore from \"../../store/gameStore\";\nimport { Player } from \"../../types\";\n\n// Separate component for editing a player\nfunction EditPlayerForm({ \n  player, \n  onSave, \n  onCancel \n}: { \n  player: Player, \n  onSave: (id: string, name: string) => void,\n  onCancel: () => void \n}) {\n  const [name, setName] = useState(player.name);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!name.trim()) return;\n    onSave(player.id, name.trim());\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex-1 flex gap-2\">\n      <label htmlFor=\"playerNameEdit\" className=\"sr-only\">Player Name</label>\n      <input\n        id=\"playerNameEdit\"\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        className=\"flex-1 px-4 py-2 bg-gray-800 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        aria-label=\"Edit player name\"\n      />\n      <button\n        type=\"submit\"\n        className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n      >\n        Save\n      </button>\n      <button\n        type=\"button\"\n        onClick={onCancel}\n        className=\"px-4 py-2 bg-gray-700 text-white rounded-md hover:bg-gray-600 transition-colors\"\n      >\n        Cancel\n      </button>\n    </form>\n  );\n}\n\nexport default function PlayersPage() {\n  const { players, addPlayer, removePlayer } = useGameStore();\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n  const [editingPlayerId, setEditingPlayerId] = useState<string | null>(null);\n\n  const handleAddPlayer = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newPlayerName.trim()) return;\n    addPlayer(newPlayerName.trim());\n    setNewPlayerName(\"\");\n  };\n\n  const handleUpdatePlayer = (id: string, name: string) => {\n    // Get the current state and update it\n    const state = useGameStore.getState();\n    const updatedPlayers = state.players.map(player => \n      player.id === id ? { ...player, name } : player\n    );\n    \n    // Set the new state\n    useGameStore.setState({ players: updatedPlayers });\n    \n    // Clear editing state\n    setEditingPlayerId(null);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Player Management</h1>\n      \n      {/* Add Player Form */}\n      <form onSubmit={handleAddPlayer} className=\"mb-8 p-4 bg-gray-800 rounded-lg border border-gray-700\">\n        <h2 className=\"text-xl font-semibold mb-4 text-white\">Add New Player</h2>\n        <div className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={newPlayerName}\n            onChange={(e) => setNewPlayerName(e.target.value)}\n            placeholder=\"Enter player name\"\n            className=\"flex-1 px-4 py-2 bg-gray-700 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 placeholder-gray-300\"\n          />\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2\"\n          >\n            <FaUserPlus /> Add\n          </button>\n        </div>\n      </form>\n      \n      {/* Player List */}\n      <div className=\"bg-gray-900 rounded-lg shadow-md overflow-hidden border border-gray-700\">\n        <h2 className=\"text-xl font-semibold p-4 bg-gray-800 text-white\">Players</h2>\n        \n        {players.length === 0 ? (\n          <p className=\"p-4 text-gray-300 text-center\">No players added yet. Add a player to get started.</p>\n        ) : (\n          <ul className=\"divide-y divide-gray-700\">\n            {players.map((player) => (\n              <li key={player.id} className=\"p-4 flex items-center justify-between\">\n                {editingPlayerId === player.id ? (\n                  <EditPlayerForm \n                    player={player}\n                    onSave={handleUpdatePlayer}\n                    onCancel={() => setEditingPlayerId(null)}\n                  />\n                ) : (\n                  <>\n                    <span className=\"font-medium text-white\">{player.name}</span>\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => setEditingPlayerId(player.id)}\n                        className=\"p-2 text-blue-400 hover:text-blue-300 transition-colors\"\n                        aria-label=\"Edit player\"\n                      >\n                        <FaEdit />\n                      </button>\n                      <button\n                        onClick={() => removePlayer(player.id)}\n                        className=\"p-2 text-red-400 hover:text-red-300 transition-colors\"\n                        aria-label=\"Delete player\"\n                      >\n                        <FaTrash />\n                      </button>\n                    </div>\n                  </>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}